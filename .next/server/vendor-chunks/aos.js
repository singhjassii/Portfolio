"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/aos";
exports.ids = ["vendor-chunks/aos"];
exports.modules = {

/***/ "(ssr)/./node_modules/aos/dist/aos.cjs.js":
/*!******************************************!*\
  !*** ./node_modules/aos/dist/aos.cjs.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar throttle = _interopDefault(__webpack_require__(/*! lodash.throttle */ \"(ssr)/./node_modules/lodash.throttle/index.js\"));\nvar debounce = _interopDefault(__webpack_require__(/*! lodash.debounce */ \"(ssr)/./node_modules/lodash.debounce/index.js\"));\n\nvar callback = function callback() {};\n\nfunction containsAOSNode(nodes) {\n  var i = void 0,\n      currentNode = void 0,\n      result = void 0;\n\n  for (i = 0; i < nodes.length; i += 1) {\n    currentNode = nodes[i];\n\n    if (currentNode.dataset && currentNode.dataset.aos) {\n      return true;\n    }\n\n    result = currentNode.children && containsAOSNode(currentNode.children);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction check(mutations) {\n  if (!mutations) return;\n\n  mutations.forEach(function (mutation) {\n    var addedNodes = Array.prototype.slice.call(mutation.addedNodes);\n    var removedNodes = Array.prototype.slice.call(mutation.removedNodes);\n    var allNodes = addedNodes.concat(removedNodes);\n\n    if (containsAOSNode(allNodes)) {\n      return callback();\n    }\n  });\n}\n\nfunction getMutationObserver() {\n  return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n}\n\nfunction isSupported() {\n  return !!getMutationObserver();\n}\n\nfunction ready(selector, fn) {\n  var doc = window.document;\n  var MutationObserver = getMutationObserver();\n\n  var observer = new MutationObserver(check);\n  callback = fn;\n\n  observer.observe(doc.documentElement, {\n    childList: true,\n    subtree: true,\n    removedNodes: true\n  });\n}\n\nvar observer = { isSupported: isSupported, ready: ready };\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Device detector\n */\n\nvar fullNameRe = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i;\nvar prefixRe = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\nvar fullNameMobileRe = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\nvar prefixMobileRe = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n\nfunction ua() {\n  return navigator.userAgent || navigator.vendor || window.opera || '';\n}\n\nvar Detector = function () {\n  function Detector() {\n    classCallCheck(this, Detector);\n  }\n\n  createClass(Detector, [{\n    key: 'phone',\n    value: function phone() {\n      var a = ua();\n      return !!(fullNameRe.test(a) || prefixRe.test(a.substr(0, 4)));\n    }\n  }, {\n    key: 'mobile',\n    value: function mobile() {\n      var a = ua();\n      return !!(fullNameMobileRe.test(a) || prefixMobileRe.test(a.substr(0, 4)));\n    }\n  }, {\n    key: 'tablet',\n    value: function tablet() {\n      return this.mobile() && !this.phone();\n    }\n\n    // http://browserhacks.com/#hack-acea075d0ac6954f275a70023906050c\n\n  }, {\n    key: 'ie11',\n    value: function ie11() {\n      return '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style;\n    }\n  }]);\n  return Detector;\n}();\n\nvar detect = new Detector();\n\n/**\n * Adds multiple classes on node\n * @param {DOMNode} node\n * @param {array}  classes\n */\nvar addClasses = function addClasses(node, classes) {\n  return classes && classes.forEach(function (className) {\n    return node.classList.add(className);\n  });\n};\n\n/**\n * Removes multiple classes from node\n * @param {DOMNode} node\n * @param {array}  classes\n */\nvar removeClasses = function removeClasses(node, classes) {\n  return classes && classes.forEach(function (className) {\n    return node.classList.remove(className);\n  });\n};\n\nvar fireEvent = function fireEvent(eventName, data) {\n  var customEvent = void 0;\n\n  if (detect.ie11()) {\n    customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(eventName, true, true, { detail: data });\n  } else {\n    customEvent = new CustomEvent(eventName, {\n      detail: data\n    });\n  }\n\n  return document.dispatchEvent(customEvent);\n};\n\n/**\n * Set or remove aos-animate class\n * @param {node} el         element\n * @param {int}  top        scrolled distance\n */\nvar applyClasses = function applyClasses(el, top) {\n  var options = el.options,\n      position = el.position,\n      node = el.node,\n      data = el.data;\n\n\n  var hide = function hide() {\n    if (!el.animated) return;\n\n    removeClasses(node, options.animatedClassNames);\n    fireEvent('aos:out', node);\n\n    if (el.options.id) {\n      fireEvent('aos:in:' + el.options.id, node);\n    }\n\n    el.animated = false;\n  };\n\n  var show = function show() {\n    if (el.animated) return;\n\n    addClasses(node, options.animatedClassNames);\n\n    fireEvent('aos:in', node);\n    if (el.options.id) {\n      fireEvent('aos:in:' + el.options.id, node);\n    }\n\n    el.animated = true;\n  };\n\n  if (options.mirror && top >= position.out && !options.once) {\n    hide();\n  } else if (top >= position.in) {\n    show();\n  } else if (el.animated && !options.once) {\n    hide();\n  }\n};\n\n/**\n * Scroll logic - add or remove 'aos-animate' class on scroll\n *\n * @param  {array} $elements         array of elements nodes\n * @return {void}\n */\nvar handleScroll = function handleScroll($elements) {\n  return $elements.forEach(function (el, i) {\n    return applyClasses(el, window.pageYOffset);\n  });\n};\n\n/**\n * Get offset of DOM element\n * like there were no transforms applied on it\n *\n * @param  {Node} el [DOM element]\n * @return {Object} [top and left offset]\n */\nvar offset = function offset(el) {\n  var _x = 0;\n  var _y = 0;\n\n  while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n    _x += el.offsetLeft - (el.tagName != 'BODY' ? el.scrollLeft : 0);\n    _y += el.offsetTop - (el.tagName != 'BODY' ? el.scrollTop : 0);\n    el = el.offsetParent;\n  }\n\n  return {\n    top: _y,\n    left: _x\n  };\n};\n\n/**\n * Get inline option with a fallback.\n *\n * @param  {Node} el [Dom element]\n * @param  {String} key [Option key]\n * @param  {String} fallback [Default (fallback) value]\n * @return {Mixed} [Option set with inline attributes or fallback value if not set]\n */\n\nvar getInlineOption = (function (el, key, fallback) {\n  var attr = el.getAttribute('data-aos-' + key);\n\n  if (typeof attr !== 'undefined') {\n    if (attr === 'true') {\n      return true;\n    } else if (attr === 'false') {\n      return false;\n    }\n  }\n\n  return attr || fallback;\n});\n\n/**\n * Calculate offset\n * basing on element's settings like:\n * - anchor\n * - offset\n *\n * @param  {Node} el [Dom element]\n * @return {Integer} [Final offset that will be used to trigger animation in good position]\n */\n\nvar getPositionIn = function getPositionIn(el, defaultOffset, defaultAnchorPlacement) {\n  var windowHeight = window.innerHeight;\n  var anchor = getInlineOption(el, 'anchor');\n  var inlineAnchorPlacement = getInlineOption(el, 'anchor-placement');\n  var additionalOffset = Number(getInlineOption(el, 'offset', inlineAnchorPlacement ? 0 : defaultOffset));\n  var anchorPlacement = inlineAnchorPlacement || defaultAnchorPlacement;\n  var finalEl = el;\n\n  if (anchor && document.querySelectorAll(anchor)) {\n    finalEl = document.querySelectorAll(anchor)[0];\n  }\n\n  var triggerPoint = offset(finalEl).top - windowHeight;\n\n  switch (anchorPlacement) {\n    case 'top-bottom':\n      // Default offset\n      break;\n    case 'center-bottom':\n      triggerPoint += finalEl.offsetHeight / 2;\n      break;\n    case 'bottom-bottom':\n      triggerPoint += finalEl.offsetHeight;\n      break;\n    case 'top-center':\n      triggerPoint += windowHeight / 2;\n      break;\n    case 'center-center':\n      triggerPoint += windowHeight / 2 + finalEl.offsetHeight / 2;\n      break;\n    case 'bottom-center':\n      triggerPoint += windowHeight / 2 + finalEl.offsetHeight;\n      break;\n    case 'top-top':\n      triggerPoint += windowHeight;\n      break;\n    case 'bottom-top':\n      triggerPoint += windowHeight + finalEl.offsetHeight;\n      break;\n    case 'center-top':\n      triggerPoint += windowHeight + finalEl.offsetHeight / 2;\n      break;\n  }\n\n  return triggerPoint + additionalOffset;\n};\n\nvar getPositionOut = function getPositionOut(el, defaultOffset) {\n  var windowHeight = window.innerHeight;\n  var anchor = getInlineOption(el, 'anchor');\n  var additionalOffset = getInlineOption(el, 'offset', defaultOffset);\n  var finalEl = el;\n\n  if (anchor && document.querySelectorAll(anchor)) {\n    finalEl = document.querySelectorAll(anchor)[0];\n  }\n\n  var elementOffsetTop = offset(finalEl).top;\n\n  return elementOffsetTop + finalEl.offsetHeight - additionalOffset;\n};\n\n/* Clearing variables */\n\nvar prepare = function prepare($elements, options) {\n  $elements.forEach(function (el, i) {\n    var mirror = getInlineOption(el.node, 'mirror', options.mirror);\n    var once = getInlineOption(el.node, 'once', options.once);\n    var id = getInlineOption(el.node, 'id');\n    var customClassNames = options.useClassNames && el.node.getAttribute('data-aos');\n\n    var animatedClassNames = [options.animatedClassName].concat(customClassNames ? customClassNames.split(' ') : []).filter(function (className) {\n      return typeof className === 'string';\n    });\n\n    if (options.initClassName) {\n      el.node.classList.add(options.initClassName);\n    }\n\n    el.position = {\n      in: getPositionIn(el.node, options.offset, options.anchorPlacement),\n      out: mirror && getPositionOut(el.node, options.offset)\n    };\n\n    el.options = {\n      once: once,\n      mirror: mirror,\n      animatedClassNames: animatedClassNames,\n      id: id\n    };\n  });\n\n  return $elements;\n};\n\n/**\n * Generate initial array with elements as objects\n * This array will be extended later with elements attributes values\n * like 'position'\n */\nvar elements = (function () {\n  var elements = document.querySelectorAll('[data-aos]');\n  return Array.prototype.map.call(elements, function (node) {\n    return { node: node };\n  });\n});\n\n/**\n * *******************************************************\n * AOS (Animate on scroll) - wowjs alternative\n * made to animate elements on scroll in both directions\n * *******************************************************\n */\n\n/**\n * Private variables\n */\nvar $aosElements = [];\nvar initialized = false;\n\n/**\n * Default options\n */\nvar options = {\n  offset: 120,\n  delay: 0,\n  easing: 'ease',\n  duration: 400,\n  disable: false,\n  once: false,\n  mirror: false,\n  anchorPlacement: 'top-bottom',\n  startEvent: 'DOMContentLoaded',\n  animatedClassName: 'aos-animate',\n  initClassName: 'aos-init',\n  useClassNames: false,\n  disableMutationObserver: false,\n  throttleDelay: 99,\n  debounceDelay: 50\n};\n\n// Detect not supported browsers (<=IE9)\n// http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\nvar isBrowserNotSupported = function isBrowserNotSupported() {\n  return document.all && !window.atob;\n};\n\nvar initializeScroll = function initializeScroll() {\n  // Extend elements objects in $aosElements with their positions\n  $aosElements = prepare($aosElements, options);\n  // Perform scroll event, to refresh view and show/hide elements\n  handleScroll($aosElements);\n\n  /**\n   * Handle scroll event to animate elements on scroll\n   */\n  window.addEventListener('scroll', throttle(function () {\n    handleScroll($aosElements, options.once);\n  }, options.throttleDelay));\n\n  return $aosElements;\n};\n\n/**\n * Refresh AOS\n */\nvar refresh = function refresh() {\n  var initialize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  // Allow refresh only when it was first initialized on startEvent\n  if (initialize) initialized = true;\n  if (initialized) initializeScroll();\n};\n\n/**\n * Hard refresh\n * create array with new elements and trigger refresh\n */\nvar refreshHard = function refreshHard() {\n  $aosElements = elements();\n\n  if (isDisabled(options.disable) || isBrowserNotSupported()) {\n    return disable();\n  }\n\n  refresh();\n};\n\n/**\n * Disable AOS\n * Remove all attributes to reset applied styles\n */\nvar disable = function disable() {\n  $aosElements.forEach(function (el, i) {\n    el.node.removeAttribute('data-aos');\n    el.node.removeAttribute('data-aos-easing');\n    el.node.removeAttribute('data-aos-duration');\n    el.node.removeAttribute('data-aos-delay');\n\n    if (options.initClassName) {\n      el.node.classList.remove(options.initClassName);\n    }\n\n    if (options.animatedClassName) {\n      el.node.classList.remove(options.animatedClassName);\n    }\n  });\n};\n\n/**\n * Check if AOS should be disabled based on provided setting\n */\nvar isDisabled = function isDisabled(optionDisable) {\n  return optionDisable === true || optionDisable === 'mobile' && detect.mobile() || optionDisable === 'phone' && detect.phone() || optionDisable === 'tablet' && detect.tablet() || typeof optionDisable === 'function' && optionDisable() === true;\n};\n\n/**\n * Initializing AOS\n * - Create options merging defaults with user defined options\n * - Set attributes on <body> as global setting - css relies on it\n * - Attach preparing elements to options.startEvent,\n *   window resize and orientation change\n * - Attach function that handle scroll and everything connected to it\n *   to window scroll event and fire once document is ready to set initial state\n */\nvar init = function init(settings) {\n  options = _extends(options, settings);\n\n  // Create initial array with elements -> to be fullfilled later with prepare()\n  $aosElements = elements();\n\n  /**\n   * Disable mutation observing if not supported\n   */\n  if (!options.disableMutationObserver && !observer.isSupported()) {\n    console.info('\\n      aos: MutationObserver is not supported on this browser,\\n      code mutations observing has been disabled.\\n      You may have to call \"refreshHard()\" by yourself.\\n    ');\n    options.disableMutationObserver = true;\n  }\n\n  /**\n   * Observe [aos] elements\n   * If something is loaded by AJAX\n   * it'll refresh plugin automatically\n   */\n  if (!options.disableMutationObserver) {\n    observer.ready('[data-aos]', refreshHard);\n  }\n\n  /**\n   * Don't init plugin if option `disable` is set\n   * or when browser is not supported\n   */\n  if (isDisabled(options.disable) || isBrowserNotSupported()) {\n    return disable();\n  }\n\n  /**\n   * Set global settings on body, based on options\n   * so CSS can use it\n   */\n  document.querySelector('body').setAttribute('data-aos-easing', options.easing);\n\n  document.querySelector('body').setAttribute('data-aos-duration', options.duration);\n\n  document.querySelector('body').setAttribute('data-aos-delay', options.delay);\n\n  /**\n   * Handle initializing\n   */\n  if (['DOMContentLoaded', 'load'].indexOf(options.startEvent) === -1) {\n    // Listen to options.startEvent and initialize AOS\n    document.addEventListener(options.startEvent, function () {\n      refresh(true);\n    });\n  } else {\n    window.addEventListener('load', function () {\n      refresh(true);\n    });\n  }\n\n  if (options.startEvent === 'DOMContentLoaded' && ['complete', 'interactive'].indexOf(document.readyState) > -1) {\n    // Initialize AOS if default startEvent was already fired\n    refresh(true);\n  }\n\n  /**\n   * Refresh plugin on window resize or orientation change\n   */\n  window.addEventListener('resize', debounce(refresh, options.debounceDelay, true));\n\n  window.addEventListener('orientationchange', debounce(refresh, options.debounceDelay, true));\n\n  return $aosElements;\n};\n\n/**\n * Export Public API\n */\n\nvar aos = {\n  init: init,\n  refresh: refresh,\n  refreshHard: refreshHard\n};\n\nmodule.exports = aos;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aos/dist/aos.cjs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aos/dist/aos.css":
/*!***************************************!*\
  !*** ./node_modules/aos/dist/aos.css ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"9a26a349d21a\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW9zL2Rpc3QvYW9zLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvYW9zL2Rpc3QvYW9zLmNzcz8xMzY2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiOWEyNmEzNDlkMjFhXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aos/dist/aos.css\n");

/***/ })

};
;